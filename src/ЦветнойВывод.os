#Область ПрограммныйИнтерфейс

Процедура Сообщить(Знач ФорматированнаяСтрока = "", Знач пСтатусСообщения = Неопределено) Экспорт
	
	Если пСтатусСообщения = СтатусСообщения.Важное Тогда
		ЦветТекста = "Красный";
	ИначеЕсли пСтатусСообщения = СтатусСообщения.Внимание Тогда
		ЦветТекста = "Желтый";
	ИначеЕсли пСтатусСообщения = СтатусСообщения.Информация Тогда
		ЦветТекста = "Зеленый";
	ИначеЕсли пСтатусСообщения = СтатусСообщения.ОченьВажное Тогда
		ЦветТекста = "Красный";
	Иначе
		ЦветТекста = Неопределено;
	КонецЕсли;

	ВывестиСтроку(ФорматированнаяСтрока, ЦветТекста);

КонецПроцедуры

Процедура ВывестиСтроку(Знач ФорматированнаяСтрока = "", Знач ЦветТекста = Неопределено) Экспорт

	Вывести(ФорматированнаяСтрока, ЦветТекста);

	Консоль.Вывести(Символы.ПС);

КонецПроцедуры

Процедура Вывести(Знач ФорматированнаяСтрока, Знач ЦветТекста = Неопределено) Экспорт
	
	Если Врег(ЦветТекста) = "МОНОХРОМ" Тогда
		ЦветТекста = Неопределено;
		ЦветнойВыводРазрешен = Ложь;
	Иначе
		ЦветнойВыводРазрешен = Истина;
	КонецЕсли;

	ТаблицаПолей = РазобратьСтроку(ФорматированнаяСтрока, ЦветТекста);

	Если ЦветнойВыводРазрешен Тогда
		
		ПредыдущееЗначениеЦветаТекта = Консоль.ЦветТекста;
		Если НЕ ЗначениеЗаполнено(ПредыдущееЗначениеЦветаТекта) Тогда
			ПредыдущееЗначениеЦветаТекта = ЦветКонсоли.Белый;
		КонецЕсли;
		
		Если ЦветТекста = Неопределено Тогда
			ЦветТекста = ПредыдущееЗначениеЦветаТекта;
		КонецЕсли;
		Для Каждого Поле Из ТаблицаПолей Цикл
			Если ЗначениеЗаполнено(Поле.Цвет) Тогда
				Консоль.ЦветТекста = ЦветКонсоли[Поле.Цвет];
			Иначе
				Консоль.ЦветТекста = ПредыдущееЗначениеЦветаТекта;
			КонецЕсли;
			Консоль.Вывести(Поле.Текст);
		КонецЦикла;
		
		Консоль.ЦветТекста = ПредыдущееЗначениеЦветаТекта;
		
	Иначе
		
		МассивПолей = ТаблицаПолей.ВыгрузитьКолонку("Текст");
		НеФорматированнаяСтрока = СтрСоединить(МассивПолей);
		
		Консоль.Вывести(НеФорматированнаяСтрока);

	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыФункции

Функция РазобратьСтроку(ФорматированнаяСтрока, ЦветТекста) Экспорт

	Длина = СтрДлина(ФорматированнаяСтрока);
	
	Таблица = Новый ТаблицаЗначений();
	Таблица.Колонки.Добавить("Текст");
	Таблица.Колонки.Добавить("Цвет");

	тзЦветныеПоля = ЦветныеПоля(ФорматированнаяСтрока);

	Поз = 1;
	Для Каждого ЦветПоле Из тзЦветныеПоля Цикл
		Если Поз < ЦветПоле.Позиция Тогда
			Текст = Сред(ФорматированнаяСтрока, Поз, ЦветПоле.Позиция - Поз);
			Стр = Таблица.Добавить();
			Стр.Текст = Текст;
			Стр.Цвет = ЦветТекста;
		КонецЕсли;
		
		Стр = Таблица.Добавить();
		Стр.Текст = ЦветПоле.Текст;
		Стр.Цвет = ЦветПоле.Цвет;
		
		Поз = ЦветПоле.Позиция + ЦветПоле.Длина;
	КонецЦикла;

	Если Поз-1 <= Длина Тогда
		Текст = Сред(ФорматированнаяСтрока, Поз);
		Стр = Таблица.Добавить();
		Стр.Текст = Текст;
		Стр.Цвет = ЦветТекста;
	КонецЕсли;
	
	Возврат Таблица;
	
КонецФункции

Функция ЦветныеПоля(ФорматированнаяСтрока)
	
	РВ = Новый РегулярноеВыражение(ШаблонЦветнойПодстроки());
	Совпадения = РВ.НайтиСовпадения(ФорматированнаяСтрока);

	ЦветныеПоля = Новый ТаблицаЗначений;
	ЦветныеПоля.Колонки.Добавить("Позиция");
	ЦветныеПоля.Колонки.Добавить("Текст");
	ЦветныеПоля.Колонки.Добавить("Длина");
	ЦветныеПоля.Колонки.Добавить("Цвет");
	
	Для Каждого Совпадение Из Совпадения Цикл
		Группы = Совпадение.Группы;
		стр = ЦветныеПоля.Добавить();
		стр.Позиция = Совпадение.Индекс+1;
		стр.Текст = Группы[1].Значение;
		стр.Длина = Совпадение.Длина;
		ЦветИмя = Группы[2].Значение;
		стр.Цвет = ЦветИмя;
	КонецЦикла;
	
	ЦветныеПоля.Сортировать("Позиция");
	
	Возврат ЦветныеПоля;

КонецФункции

Функция ШаблонЦветнойПодстроки()
	
	Возврат "\((.+?)\|#color=(.+?)\)"; // (Текст|#color=Цвет)

КонецФункции

#КонецОбласти
